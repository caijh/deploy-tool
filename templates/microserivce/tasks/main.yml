---
- name: 上传文件
  copy:
    src: files/
    dest: "{{ upload_remote_dir }}/{{ role_name }}"

- name: 生成并上传配置文件
  template:
    src: "{{ item }}"
    dest: "{{ upload_remote_dir }}/{{ role_name }}/config"
  loop: "{{ lookup('fileglob', 'templates/**', wantlist=True) }}"


- name: 检查是安装还是升级
  shell: cd "{{ upload_remote_dir }}/{{ role_name }}" && chmod +x *.sh && ./check.sh
  register: check_result

- name: 安装与升级的结果
  debug:
    msg: "{{ check_result.stdout }}"

- name: 安装
  shell: cd "{{ upload_remote_dir }}/{{ role_name }}" && chmod +x *.sh && ./install.sh
  when: check_result.stdout=='New'

- name: 升级前进行备份
  shell: cd "{{ upload_remote_dir }}/{{ role_name }}" && chmod +x *.sh && ./backup.sh
  when: check_result.stdout=='Upgrade'

- name: 升级
  shell: cd "{{ upload_remote_dir }}/{{ role_name }}" && chmod +x *.sh && ./upgrade.sh
  when: check_result.stdout=='Upgrade'

- name: 调用自动化测试
  shell: cd "{{ upload_remote_dir }}/{{ role_name }}" && chmod +x *.sh && ./test.sh
  register: test_result
  ignore_errors: True

- name: 安装回滚，如果安装失败
  shell: cd "{{ upload_remote_dir }}/{{ role_name }}" && chmod +x *.sh && ./new-rollback.sh
  when: test_result.rc > 0 and check_result.stdout=='New'

- name: 升级回滚，如果升级失败
  shell: cd "{{ upload_remote_dir }}/{{ role_name }}" && chmod +x *.sh && ./upgrade-rollback.sh
  when: test_result.rc > 0 and check_result.stdout=='Upgrade'